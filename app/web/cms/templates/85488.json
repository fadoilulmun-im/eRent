{"title":"customer-reset-password","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const password = await req.body.password;\n\n  const customer = await db.customer.findUnique({\n    where: {\n      id: Number(params.id),\n    },\n  });\n  if (!customer) {\n    return reply.status(400).send({\n      status: \"ERROR\",\n      message: \"invalid link or expired\",\n    });\n  }\n\n  const token = await db.token_reset_pass.findUnique({\n    where: {\n      id_user: Number(customer.id),\n    },\n  });\n  if (!token) {\n    return reply.status(400).send({\n      status: \"ERROR\",\n      message: \"invalid link or expired\",\n    });\n  }\n\n  const customer_update = await db.customer.update({\n    where: {\n      id: customer.id,\n    },\n    data: {\n      password: await ext.argon2.hash(password),\n    },\n  });\n  await db.token_reset_pass.deleteMany({\n    where: {\n      AND: [\n        {\n          id_user: customer.id,\n        },\n        {\n          token: params.token,\n        },\n      ],\n    },\n  });\n\n  reply.send({\n    status: \"SUCCESS\",\n    message: \"Berhasil merubah password\",\n    data: customer_update,\n  })\n}","figma":{}},"slug":"/api/customer/password-reset/[id]/[token]","site":"*","id":"85488"}