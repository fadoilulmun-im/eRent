{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  if (user.user.role == \"guest\") {\n    return reply.status(401).send({\n      status: \"ERROR\",\n      message: \"Silahkan login terlebih dahulu\",\n    });\n  }\n\n  const cek = await db.transaksi.findUnique({\n    where: {\n      id: Number(params.id),\n    },\n  });\n\n  if (!cek) {\n    return reply.status(404).send({\n      status: \"ERROR\",\n      message: \"Pesanan tidak ditemukan\",\n    });\n  }\n  if (cek.tanggal_pemesanan) {\n    return reply.status(400).send({\n      status: \"ERROR\",\n      message: \"Pemesanan sudah dilakukan\",\n      data: cek,\n    });\n  }\n\n  const {\n    tanggal_peminjaman,\n    tanggal_pengembalian,\n    id_bank,\n    kirim,\n    id_alamat,\n    biaya_pengiriman,\n  } = req.body;\n\n  const biaya_kirim = biaya_pengiriman ? Number(biaya_pengiriman) : null;\n  // const is_kirim = kirim || kirim == \"true\" ? true : false;\n  const alamat = id_alamat ? Number(id_alamat) : null;\n\n  if (kirim == \"true\" || kirim == true) {\n    var is_kirim = true;\n  }\n  if (kirim == \"false\" || kirim == false) {\n    var is_kirim = false;\n  }\n\n  // To calculate the time difference of two dates\n  const Difference_In_Time =\n    new Date(tanggal_pengembalian).getTime() -\n    new Date(tanggal_peminjaman).getTime();\n  // To calculate the no. of days between two dates\n  const Difference_In_Days = Difference_In_Time / (1000 * 3600 * 24);\n\n  const detail_transaksi = await db.detail_transaksi.findMany({\n    where: {\n      id_transaksi: Number(params.id),\n    },\n    select: {\n      total_harga: true,\n    },\n  });\n\n  // menjumlah semua harga dalam keranjang\n  let harga = 0;\n  await detail_transaksi.forEach((i) => {\n    harga = harga + i.total_harga;\n  });\n\n  const unique_code = Math.floor(Math.random() * 200) + 101;\n\n  // jumlah harga * total hari peminjaman + kode unik\n  let total_harga = (await harga) * Difference_In_Days;\n\n  const bank = await db.bank.findUnique({\n    where: {\n      id: Number(id_bank),\n    },\n  });\n  total_harga = total_harga + Number(bank.biaya_admin);\n\n  if (biaya_kirim) {\n    total_harga = total_harga + biaya_kirim;\n  }\n\n  const transaksi = await db.transaksi.update({\n    where: {\n      id: Number(params.id),\n    },\n    data: {\n      tanggal_pemesanan: new Date(),\n      tanggal_peminjaman: new Date(tanggal_peminjaman),\n      tanggal_pengembalian: new Date(tanggal_pengembalian),\n      status_transaksi: 8,\n      total_harga,\n      kode_unik: unique_code,\n      is_kirim: is_kirim,\n      id_bank: Number(id_bank),\n      id_alamat: alamat,\n      biaya_pengiriman: biaya_kirim,\n    },\n  });\n\n  reply.send({\n    status: \"SUCCESS\",\n    message: \"Berhasil melakukan pemesanan\",\n    data: transaksi,\n  })\n}","figma":{}},"title":"checkout","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"14213","slug":"/api/checkout/[id]","site":"*","id":"81727"}