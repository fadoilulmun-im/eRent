{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  if (user.user.role == \"guest\") {\n    return reply.status(401).send({\n      status: \"ERROR\",\n      message: \"Silahkan login terlebih dahulu\",\n    });\n  }\n\n  let status = req.query.status;\n  status = (await status) ? Number(status) : null;\n\n  try {\n    if (status == null) {\n      const orders = await db.transaksi.findMany({\n        where: {\n          NOT: {\n            status_transaksi: null,\n          },\n          AND: {\n            id_customer: Number(params.id),\n          },\n        },\n        include: {\n          detail_transaksi: {\n            include: {\n              barang: true,\n            },\n          },\n        },\n      });\n\n      return reply.send({\n        status: \"SUCCESS\",\n        message: \"Berhasil get all orders\",\n        data: orders,\n      });\n    } else {\n      const orders = await db.transaksi.findMany({\n        where: {\n          AND: {\n            id_customer: Number(params.id),\n            status_transaksi: status,\n          },\n        },\n        include: {\n          detail_transaksi: {\n            include: {\n              barang: true,\n            },\n          },\n        },\n      });\n\n      return reply.send({\n        status: \"SUCCESS\",\n        message: \"Berhasil get all orders\",\n        data: orders,\n      });\n    }\n  } catch (e) {\n    return reply.status(500).send({\n      status: \"ERROR\",\n      message: e.toString(),\n    });\n  }\n}","figma":{}},"title":"all-orders","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"14213","slug":"/api/customer/[id]/orders","site":"*","id":"32367"}