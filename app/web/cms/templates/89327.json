{"content":{"type":"API","structure":"","server_on_load":"async ({\n  template,\n  params,\n  render,\n  db,\n  req,\n  reply,\n  user,\n  log,\n  ext,\n  isDev,\n}: Server) => {\n  const page = req.query.page ? req.query.page : 0;\n  const perPage = req.query.perPage ? req.query.perPage : 10;\n  const search = req.query.search ? req.query.search : \"\";\n  const category = req.query.category\n    ? [Number(req.query.category)]\n    : [1, 2, 3, 4, 5, 6];\n  const barang = await db.barang.findMany({\n    skip: Number(page),\n    take: Number(perPage),\n    where: {\n      OR: [\n        {\n          nama_barang: {\n            contains: search,\n            mode: \"insensitive\",\n          },\n        },\n        {\n          merk_barang: {\n            contains: search,\n            mode: \"insensitive\",\n          },\n        },\n        {\n          detail_barang: {\n            contains: search,\n            mode: \"insensitive\",\n          },\n        },\n      ],\n      AND: [\n        {\n          kategori_barang: {\n            in: category,\n          },\n        },\n      ],\n    },\n    select: {\n      id: true,\n      nama_barang: true,\n      merk_barang: true,\n      harga_barang: true,\n      gambar_barang: true,\n      kategori: true,\n    },\n  });\n\n  reply.send({\n    status: \"SUCCESS\",\n    message: \"Berhasil get data barang\",\n    data: barang,\n  })\n}","figma":{}},"title":"list-barang","type":"cms-template","lang":"","status":"SYSTEM","parent_id":"54643","slug":"/api/barang","site":"*","id":"89327"}